version: '3'

services:
    # authentication services
    auth-redis:
        restart: unless-stopped
        image: redis:7.2.4
        volumes:
            - ./docker/authentication/redis:/data
        networks:
            - default

    auth-postgres:
        restart: unless-stopped
        image: postgres:16.2
        volumes:
            - ./docker/authentication/pg:/var/lib/postgresql/data
        environment:
            POSTGRES_USER: root
            POSTGRES_PASSWORD: root
            POSTGRES_DB: printit
        networks:
            - default

    auth-app:
        restart: unless-stopped
        build:
            context: .
            dockerfile: auth.Dockerfile
        depends_on:
            - auth-redis
            - auth-postgres
        environment:
            - REST_HOST=0.0.0.0
            - REST_PORT=3000
            - GRPC_ADDR=0.0.0.0:50051
            - PG_HOST=auth-postgres
            - REDIS_URL=redis://auth-redis/0
        ports:
            - "3000:3000"
            - "50051:50051"
        networks:
            - default


    # shop services
    shop-mongo:
        restart: unless-stopped
        image: mongo:7.0
        volumes:
            - ./docker/shop/mongo:/data/db
        networks:
            - default

    shop-app:
        restart: unless-stopped
        build:
            context: .
            dockerfile: shop.Dockerfile
        depends_on:
            - auth-app
            - shop-mongo
        environment:
            - REST_PORT=3002
            - GRPC_PORT=50053
            - AUTH_GRPC_URI=http://auth-app:50051
            - MONGO_URI=mongodb://shop-mongo/?maxPoolSize=100
        ports:
            - "3002:3002"
            - "50053:50053"
        networks:
            - default

    # price services
    price-postgres:
        restart: unless-stopped
        image: postgres:16.2
        volumes:
            - ./docker/price/pg:/var/lib/postgresql/data
        environment:
            POSTGRES_USER: root
            POSTGRES_PASSWORD: root
            POSTGRES_DB: printit
        networks:
            - default

    price-app:
        restart: unless-stopped
        build:
            context: .
            dockerfile: price.Dockerfile
        depends_on:
            - auth-app
            - shop-app
            - price-postgres
        environment:
            - REST_HOST=0.0.0.0
            - REST_PORT=3003
            - GRPC_ADDR=0.0.0.0:50054
            - PG_HOST=price-postgres
            - AUTH_GRPC_URI=auth-app:50051
            - SHOP_GRPC_URI=shop-app:50053
        ports:
            - "3003:3003"
            - "50054:50054"
        networks:
            - default

    # file services
    file-mongo:
        restart: unless-stopped
        image: mongo:7.0
        volumes:
            - ./docker/file/mongo:/data/db
        networks:
            - default

    file-minio:
        restart: unless-stopped
        image: bitnami/minio:2024.2.26
        volumes:
            - ./docker/file/minio:/bitnami/minio/data
        environment:
            - MINIO_ROOT_USER=minio-access-key
            - MINIO_ROOT_PASSWORD=minio-secret-key
        networks:
            - default

    file-app:
        restart: unless-stopped
        build:
            context: .
            dockerfile: file.Dockerfile
        depends_on:
            - auth-app
            - file-mongo
            - file-minio
        environment:
            - MONGO_URI=mongodb://file-mongo:27017/printit
            - AUTH_GRPC_URI=auth-app:50051
            - REST_PORT=3001
            - GRPC_PORT=50052
            - MINIO_URI=file-minio:9000
            - MINIO_SERVER_ACCESS_KEY=minio-access-key
            - MINIO_SERVER_SECRET_KEY=minio-secret-key
        ports:
            - "3001:3001"
            - "50052:50052"
        networks:
            - default

    # order services
    order-mongo:
        restart: unless-stopped
        image: mongo:7.0
        volumes:
            - ./docker/order/mongo:/data/db
        networks:
            - default

    order-app:
        restart: unless-stopped
        build:
            context: .
            dockerfile: order.Dockerfile
        depends_on:
            - auth-app
            - file-app
            - shop-app
            - price-app
            - order-mongo
            - kafka
        environment:
            - REST_PORT=3004
            - GRPC_PORT=50055
            - AUTH_GRPC_URI=auth-app:50051
            - FILE_GRPC_URI=file-app:50052
            - SHOP_GRPC_URI=shop-app:50053
            - PRICE_GRPC_URI=price-app:50054
            - MONGO_URI=mongodb://order-mongo/?maxPoolSize=100
            - KAFKA_BROKER=kafka:9092
        ports:
            - "3004:3004"
            - "50055:50055"
        networks:
            - default

    # notification service
    notification-app:
        depends_on:
            - order-app
            - kafka

    # live traffic service
    live-traffic-app:
        depends_on:
            - live-traffic-redis
            - order-app
            - kafka
        ports:
            - "3005:3005"
            - "50056:50056"

    live-traffic-redis:
        restart: unless-stopped
        image: redis:7.2.4
        volumes:
            - ./docker/live-traffic/redis:/data
        networks:
            - default

    # for async processing
    zookeeper:
        image: confluentinc/cp-zookeeper:7.6.0
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
        ports:
            - 22181:2181
        networks:
            - default

    kafka:
        build:
            context: .
            dockerfile: kafka.Dockerfile
        depends_on:
            - zookeeper
        ports:
            - 29092:29092
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            TOPIC_NAME: order-events
        networks:
            - default



networks:
    default: {}
